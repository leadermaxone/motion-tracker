using TMPro;using UnityEngine;using UnityEngine.InputSystem;using UnityEngine.UI;using Gyroscope = UnityEngine.InputSystem.Gyroscope;public class SensorsReader : MonoBehaviour{    public TextMeshProUGUI text, text2;    public GameObject PhoneModel1, PhoneModel2, PhoneModel3, PhoneModel4;    Vector3 gyroAttitude;    Vector3 gyroRotationUnbiased;    Vector3 angularVelocity;    Vector3 acceleration;    Vector3 attitude;    Vector3 gravity;    Vector3 angularVelocityRot;    Vector3 accelerationRot;    Vector3 attitudeRot;    Vector3 gravityRot;

    public float rotationSpeedFactor = 10f; // Adjust this value to control rotation speed

    void Start()    {        //text = GetComponent<TextMeshProUGUI>();        //text2 = GetComponent<TextMeshProUGUI>();        InputSystem.EnableDevice(Gyroscope.current);        InputSystem.EnableDevice(Accelerometer.current);        InputSystem.EnableDevice(AttitudeSensor.current);        InputSystem.EnableDevice(GravitySensor.current);        angularVelocityRot = Vector3.zero;        accelerationRot = Vector3.zero;        attitudeRot = Vector3.zero;        gravityRot = Vector3.zero;    }    void Update()     {

        angularVelocity = Gyroscope.current.angularVelocity.ReadValue();        acceleration = Accelerometer.current.acceleration.ReadValue();        attitude = AttitudeSensor.current.attitude.ReadValue().eulerAngles; // ReadValue() returns a Quaternion
        gravity = GravitySensor.current.gravity.ReadValue();        angularVelocityRot += Gyroscope.current.angularVelocity.ReadValue();        accelerationRot += Accelerometer.current.acceleration.ReadValue();        attitudeRot += AttitudeSensor.current.attitude.ReadValue().eulerAngles; // ReadValue() returns a Quaternion
        gravityRot += GravitySensor.current.gravity.ReadValue();        PhoneModel1.transform.Rotate(rotationSpeedFactor * Time.deltaTime * angularVelocity);        PhoneModel2.transform.Rotate(rotationSpeedFactor * Time.deltaTime *  acceleration);        PhoneModel3.transform.Rotate(rotationSpeedFactor * Time.deltaTime *  attitude);        PhoneModel4.transform.Rotate(rotationSpeedFactor * Time.deltaTime *  gravity);        text.text = $"Angular Velocity\nX={angularVelocity.x:#0.00} Y={angularVelocity.y:#0.00} Z={angularVelocity.z:#0.00}\n\n" +                        $"Acceleration\nX={acceleration.x:#0.00} Y={acceleration.y:#0.00} Z={acceleration.z:#0.00}\n\n" +                            $"Attitude\nX={attitude.x:#0.00} Y={attitude.y:#0.00} Z={attitude.z:#0.00}\n\n" +                             $"Gravity\nX={gravity.x:#0.00} Y={gravity.y:#0.00} Z={gravity.z:#0.00}";        text2.text = $"Gyro Attitude \nX={gyroAttitude.x:#0.00} Y={gyroAttitude.y:#0.00} Z={gyroAttitude.z:#0.00}\n\n" +                        $"gyroRotationUnbiased\nX={gyroRotationUnbiased.x:#0.00} Y={gyroRotationUnbiased.y:#0.00} Z={gyroRotationUnbiased.z:#0.00}\n\n"                         //+                           // $"Attitude\nX={attitude.x:#0.00} Y={attitude.y:#0.00} Z={attitude.z:#0.00}\n\n" +                            // $"Gravity\nX={gravity.x:#0.00} Y={gravity.y:#0.00} Z={gravity.z:#0.00}"
                            ;    }}